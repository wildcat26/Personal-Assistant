{"ast":null,"code":"// ##############################\n// // // javascript library for creating charts\n// #############################\nvar Chartist=require(\"chartist\");// ##############################\n// // // variables used to create animation on charts\n// #############################\nvar delays=80,durations=500;var delays2=80,durations2=500;// ##############################\n// // // Daily Sales\n// #############################\nvar dailySalesChart={data:{labels:[\"M\",\"T\",\"W\",\"T\",\"F\",\"S\",\"S\"],series:[[12,17,7,17,23,18,38]]},options:{lineSmooth:Chartist.Interpolation.cardinal({tension:0}),low:0,high:50,// creative tim: we recommend you to set the high sa the biggest value + something for a better look\nchartPadding:{top:0,right:0,bottom:0,left:0}},// for animation\nanimation:{draw:function draw(data){if(data.type===\"line\"||data.type===\"area\"){data.element.animate({d:{begin:600,dur:700,from:data.path.clone().scale(1,0).translate(0,data.chartRect.height()).stringify(),to:data.path.clone().stringify(),easing:Chartist.Svg.Easing.easeOutQuint}});}else if(data.type===\"point\"){data.element.animate({opacity:{begin:(data.index+1)*delays,dur:durations,from:0,to:1,easing:\"ease\"}});}}}};// ##############################\n// // // Email Subscriptions\n// #############################\nvar emailsSubscriptionChart={data:{labels:[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"Mai\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"],series:[[542,443,320,780,553,453,326,434,568,610,756,895]]},options:{axisX:{showGrid:false},low:0,high:1000,chartPadding:{top:0,right:5,bottom:0,left:0}},responsiveOptions:[[\"screen and (max-width: 640px)\",{seriesBarDistance:5,axisX:{labelInterpolationFnc:function labelInterpolationFnc(value){return value[0];}}}]],animation:{draw:function draw(data){if(data.type===\"bar\"){data.element.animate({opacity:{begin:(data.index+1)*delays2,dur:durations2,from:0,to:1,easing:\"ease\"}});}}}};// ##############################\n// // // Completed Tasks\n// #############################\nvar completedTasksChart={data:{labels:[\"12am\",\"3pm\",\"6pm\",\"9pm\",\"12pm\",\"3am\",\"6am\",\"9am\"],series:[[230,750,450,300,280,240,200,190]]},options:{lineSmooth:Chartist.Interpolation.cardinal({tension:0}),low:0,high:1000,// creative tim: we recommend you to set the high sa the biggest value + something for a better look\nchartPadding:{top:0,right:0,bottom:0,left:0}},animation:{draw:function draw(data){if(data.type===\"line\"||data.type===\"area\"){data.element.animate({d:{begin:600,dur:700,from:data.path.clone().scale(1,0).translate(0,data.chartRect.height()).stringify(),to:data.path.clone().stringify(),easing:Chartist.Svg.Easing.easeOutQuint}});}else if(data.type===\"point\"){data.element.animate({opacity:{begin:(data.index+1)*delays,dur:durations,from:0,to:1,easing:\"ease\"}});}}}};module.exports={dailySalesChart:dailySalesChart,emailsSubscriptionChart:emailsSubscriptionChart,completedTasksChart:completedTasksChart};","map":{"version":3,"sources":["/home/wildcat26/engage-wit/src/variables/charts.js"],"names":["Chartist","require","delays","durations","delays2","durations2","dailySalesChart","data","labels","series","options","lineSmooth","Interpolation","cardinal","tension","low","high","chartPadding","top","right","bottom","left","animation","draw","type","element","animate","d","begin","dur","from","path","clone","scale","translate","chartRect","height","stringify","to","easing","Svg","Easing","easeOutQuint","opacity","index","emailsSubscriptionChart","axisX","showGrid","responsiveOptions","seriesBarDistance","labelInterpolationFnc","value","completedTasksChart","module","exports"],"mappings":"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","sourcesContent":["// ##############################\n// // // javascript library for creating charts\n// #############################\nvar Chartist = require(\"chartist\");\n\n// ##############################\n// // // variables used to create animation on charts\n// #############################\nvar delays = 80,\n  durations = 500;\nvar delays2 = 80,\n  durations2 = 500;\n\n// ##############################\n// // // Daily Sales\n// #############################\n\nconst dailySalesChart = {\n  data: {\n    labels: [\"M\", \"T\", \"W\", \"T\", \"F\", \"S\", \"S\"],\n    series: [[12, 17, 7, 17, 23, 18, 38]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n  // for animation\n  animation: {\n    draw: function(data) {\n      if (data.type === \"line\" || data.type === \"area\") {\n        data.element.animate({\n          d: {\n            begin: 600,\n            dur: 700,\n            from: data.path\n              .clone()\n              .scale(1, 0)\n              .translate(0, data.chartRect.height())\n              .stringify(),\n            to: data.path.clone().stringify(),\n            easing: Chartist.Svg.Easing.easeOutQuint\n          }\n        });\n      } else if (data.type === \"point\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays,\n            dur: durations,\n            from: 0,\n            to: 1,\n            easing: \"ease\"\n          }\n        });\n      }\n    }\n  }\n};\n\n// ##############################\n// // // Email Subscriptions\n// #############################\n\nconst emailsSubscriptionChart = {\n  data: {\n    labels: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"Mai\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    series: [[542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]]\n  },\n  options: {\n    axisX: {\n      showGrid: false\n    },\n    low: 0,\n    high: 1000,\n    chartPadding: {\n      top: 0,\n      right: 5,\n      bottom: 0,\n      left: 0\n    }\n  },\n  responsiveOptions: [\n    [\n      \"screen and (max-width: 640px)\",\n      {\n        seriesBarDistance: 5,\n        axisX: {\n          labelInterpolationFnc: function(value) {\n            return value[0];\n          }\n        }\n      }\n    ]\n  ],\n  animation: {\n    draw: function(data) {\n      if (data.type === \"bar\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays2,\n            dur: durations2,\n            from: 0,\n            to: 1,\n            easing: \"ease\"\n          }\n        });\n      }\n    }\n  }\n};\n\n// ##############################\n// // // Completed Tasks\n// #############################\n\nconst completedTasksChart = {\n  data: {\n    labels: [\"12am\", \"3pm\", \"6pm\", \"9pm\", \"12pm\", \"3am\", \"6am\", \"9am\"],\n    series: [[230, 750, 450, 300, 280, 240, 200, 190]]\n  },\n  options: {\n    lineSmooth: Chartist.Interpolation.cardinal({\n      tension: 0\n    }),\n    low: 0,\n    high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\n    chartPadding: {\n      top: 0,\n      right: 0,\n      bottom: 0,\n      left: 0\n    }\n  },\n  animation: {\n    draw: function(data) {\n      if (data.type === \"line\" || data.type === \"area\") {\n        data.element.animate({\n          d: {\n            begin: 600,\n            dur: 700,\n            from: data.path\n              .clone()\n              .scale(1, 0)\n              .translate(0, data.chartRect.height())\n              .stringify(),\n            to: data.path.clone().stringify(),\n            easing: Chartist.Svg.Easing.easeOutQuint\n          }\n        });\n      } else if (data.type === \"point\") {\n        data.element.animate({\n          opacity: {\n            begin: (data.index + 1) * delays,\n            dur: durations,\n            from: 0,\n            to: 1,\n            easing: \"ease\"\n          }\n        });\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  dailySalesChart,\n  emailsSubscriptionChart,\n  completedTasksChart\n};\n"]},"metadata":{},"sourceType":"module"}