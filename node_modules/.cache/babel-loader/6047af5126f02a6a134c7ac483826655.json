{"ast":null,"code":"import _defineProperty from \"/home/wildcat26/engage-wit/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/home/wildcat26/engage-wit/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/wildcat26/engage-wit/material-dashboard-react-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wildcat26/engage-wit/material-dashboard-react-master/src/components/Tasks/Tasks.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\"; // @material-ui/icons\n\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\"; // core components\n\nimport styles from \"assets/jss/material-dashboard-react/components/tasksStyle.js\";\nimport { total, done } from \"views/Dashboard/Dashboard.js\";\nvar useStyles = makeStyles(styles);\nexport default function Tasks(props) {\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(_toConsumableArray(props.checkedIndexes)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      checked = _React$useState2[0],\n      setChecked = _React$useState2[1];\n\n  var handleToggle = function handleToggle(value) {\n    var currentIndex = checked.indexOf(value);\n\n    var newChecked = _toConsumableArray(checked);\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n      done = done + 1;\n    } else {\n      newChecked.splice(currentIndex, 1);\n      done = done - 1;\n    }\n\n    console.log(currentIndex);\n    console.log(checked);\n    console.log(newChecked);\n    setChecked(newChecked);\n  };\n\n  var tasksIndexes = props.tasksIndexes,\n      tasks = props.tasks,\n      rtlActive = props.rtlActive;\n  var tableCellClasses = classnames(classes.tableCell, _defineProperty({}, classes.tableCellRTL, rtlActive));\n  return /*#__PURE__*/React.createElement(Table, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, tasksIndexes.map(function (value) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: value,\n      className: classes.tableRow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      className: tableCellClasses,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: checked.indexOf(value) !== -1,\n      tabIndex: -1,\n      onClick: function onClick() {\n        return handleToggle(value);\n      },\n      checkedIcon: /*#__PURE__*/React.createElement(Check, {\n        className: classes.checkedIcon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 30\n        }\n      }),\n      icon: /*#__PURE__*/React.createElement(Check, {\n        className: classes.uncheckedIcon,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }),\n      classes: {\n        checked: classes.checked,\n        root: classes.root\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      className: tableCellClasses,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, tasks[value]), /*#__PURE__*/React.createElement(TableCell, {\n      className: classes.tableActions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Tooltip, {\n      id: \"tooltip-top\",\n      title: \"Edit Task\",\n      placement: \"top\",\n      classes: {\n        tooltip: classes.tooltip\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"Edit\",\n      className: classes.tableActionButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Edit, {\n      className: classes.tableActionButtonIcon + \" \" + classes.edit,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Tooltip, {\n      id: \"tooltip-top-start\",\n      title: \"Remove\",\n      placement: \"top\",\n      classes: {\n        tooltip: classes.tooltip\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      \"aria-label\": \"Close\",\n      className: classes.tableActionButton,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Close, {\n      className: classes.tableActionButtonIcon + \" \" + classes.close,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 19\n      }\n    })))));\n  })));\n}\nTasks.propTypes = {\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\n  tasks: PropTypes.arrayOf(PropTypes.node),\n  rtlActive: PropTypes.bool,\n  checkedIndexes: PropTypes.array\n};","map":{"version":3,"sources":["/home/wildcat26/engage-wit/material-dashboard-react-master/src/components/Tasks/Tasks.js"],"names":["React","PropTypes","classnames","makeStyles","Checkbox","Tooltip","IconButton","Table","TableRow","TableBody","TableCell","Edit","Close","Check","styles","total","done","useStyles","Tasks","props","classes","useState","checkedIndexes","checked","setChecked","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","console","log","tasksIndexes","tasks","rtlActive","tableCellClasses","tableCell","tableCellRTL","table","map","tableRow","checkedIcon","uncheckedIcon","root","tableActions","tooltip","tableActionButton","tableActionButtonIcon","edit","close","propTypes","arrayOf","number","node","bool","array"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Table from \"@material-ui/core/Table\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\n// @material-ui/icons\nimport Edit from \"@material-ui/icons/Edit\";\nimport Close from \"@material-ui/icons/Close\";\nimport Check from \"@material-ui/icons/Check\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/tasksStyle.js\";\nimport {total, done} from \"views/Dashboard/Dashboard.js\"\n\nconst useStyles = makeStyles(styles);\n\nexport default function Tasks(props) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([...props.checkedIndexes]);\n  const handleToggle = value => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n    if (currentIndex === -1) {\n      newChecked.push(value);\n      done = done + 1;\n\n    } else {\n      newChecked.splice(currentIndex, 1);\n      done = done - 1;\n    }\n    console.log(currentIndex);\n    console.log(checked);\n    console.log(newChecked);\n    setChecked(newChecked);\n  };\n  const { tasksIndexes, tasks, rtlActive } = props;\n  const tableCellClasses = classnames(classes.tableCell, {\n    [classes.tableCellRTL]: rtlActive\n  });\n  return (\n    <Table className={classes.table}>\n      <TableBody>\n        {tasksIndexes.map(value => (\n          <TableRow key={value} className={classes.tableRow}>\n            <TableCell className={tableCellClasses}>\n              <Checkbox\n                checked={checked.indexOf(value) !== -1}\n                tabIndex={-1}\n                onClick={() => handleToggle(value)}\n                checkedIcon={<Check className={classes.checkedIcon} />}\n                icon={<Check className={classes.uncheckedIcon} />}\n                classes={{\n                  checked: classes.checked,\n                  root: classes.root\n                }}\n              />\n            </TableCell>\n            <TableCell className={tableCellClasses}>{tasks[value]}</TableCell>\n            <TableCell className={classes.tableActions}>\n              <Tooltip\n                id=\"tooltip-top\"\n                title=\"Edit Task\"\n                placement=\"top\"\n                classes={{ tooltip: classes.tooltip }}\n              >\n                <IconButton\n                  aria-label=\"Edit\"\n                  className={classes.tableActionButton}\n                >\n                  <Edit\n                    className={\n                      classes.tableActionButtonIcon + \" \" + classes.edit\n                    }\n                  />\n                </IconButton>\n              </Tooltip>\n              <Tooltip\n                id=\"tooltip-top-start\"\n                title=\"Remove\"\n                placement=\"top\"\n                classes={{ tooltip: classes.tooltip }}\n              >\n                <IconButton\n                  aria-label=\"Close\"\n                  className={classes.tableActionButton}\n                >\n                  <Close\n                    className={\n                      classes.tableActionButtonIcon + \" \" + classes.close\n                    }\n                  />\n                </IconButton>\n              </Tooltip>\n            </TableCell>\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  );\n}\n\nTasks.propTypes = {\n  tasksIndexes: PropTypes.arrayOf(PropTypes.number),\n  tasks: PropTypes.arrayOf(PropTypes.node),\n  rtlActive: PropTypes.bool,\n  checkedIndexes: PropTypes.array\n};\n"]},"metadata":{},"sourceType":"module"}